// Generated by CoffeeScript 1.7.1
(function() {
  define(['chrome', 'package-manager', 'storage'], function(Chrome, PackageManager, Storage) {
    var exports, init, messageListener;
    init = function() {
      return Chrome.runtime.onMessage.addListener(exports.messageListener);
    };

    /**
     * Event listener for chrome message events
     * @param  {Object} request      request and parameters
     * @param  {Object} sender       sender object
     * @param  {Function} sendResponse callback to emit answer back to frontend
     * @return {boolean}              status whether to keep the connection open or not
     */
    messageListener = function(request, sender, sendResponse) {
      var newStatus, params, status;
      params = request.params;
      switch (request.action) {
        case 'installPackage':
          PackageManager.installPackage(params.packageId, function(response) {
            return sendResponse(response);
          });
          break;
        case 'getProxmateGlobalStatus':
          status = Storage.get('global_status');
          if (status) {
            sendResponse(status);
          } else {
            sendResponse(false);
          }
          break;
        case 'setProxmateGlobalStatus':
          newStatus = params.newStatus;
          if (typeof newStatus !== 'boolean') {
            newStatus = false;
          }
          Storage.set('global_status', newStatus);
          sendResponse(true);
      }
      return true;
    };
    exports = {
      init: init,
      messageListener: messageListener
    };
    return exports;
  });

}).call(this);
