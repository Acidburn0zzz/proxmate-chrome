// Generated by CoffeeScript 1.7.1
(function() {
  'use strict';
  describe('Controller: InstallCtrl', function() {
    var MainCtrl, chromeSpy, controller, scope;
    beforeEach(module('popupApp'));
    MainCtrl = {};
    scope = {};
    controller = {};
    chromeSpy = {};
    beforeEach(inject(function($controller, $rootScope) {
      scope = $rootScope.$new();
      controller = $controller;
      return chromeSpy = jasmine.createSpyObj('chrome', ['getProxmateStatus', 'setProxmateStatus']);
    }));
    it('should call getProxmateStatus and bind to scope', function() {
      chromeSpy.getProxmateStatus.andCallFake(function(callback) {
        return callback(true);
      });
      MainCtrl = controller('MainCtrl', {
        $scope: scope,
        Chrome: chromeSpy
      });
      expect(chromeSpy.getProxmateStatus).toHaveBeenCalled();
      return expect(scope.proxmateStatus).toBe(true);
    });
    return it('should call chrome.setProxmateStatus correctly on activate / deactivate', function() {
      chromeSpy.setProxmateStatus.andCallFake(function(status, callback) {
        return callback(true);
      });
      MainCtrl = controller('MainCtrl', {
        $scope: scope,
        Chrome: chromeSpy
      });
      scope.deactivateProxmate();
      expect(chromeSpy.setProxmateStatus).toHaveBeenCalledWith(false, jasmine.any(Function));
      scope.activateProxmate();
      expect(chromeSpy.setProxmateStatus).toHaveBeenCalledWith(true, jasmine.any(Function));
      return expect(chromeSpy.getProxmateStatus.callCount).toBe(3);
    });
  });

}).call(this);
