// Generated by CoffeeScript 1.7.1
(function() {
  define(['event-binder', 'chrome', 'package-manager'], function(EventBinder, Chrome, PackageManager) {
    return describe('Event Binder ', function() {
      beforeEach(function() {
        return this.sandbox = sinon.sandbox.create();
      });
      afterEach(function() {
        return this.sandbox.restore();
      });
      it('shold bind chrome message events on init', function() {
        var bindMessageEventStub, messageListenerStub;
        bindMessageEventStub = this.sandbox.stub(Chrome.runtime.onMessage, 'addListener');
        messageListenerStub = this.sandbox.stub(EventBinder, 'messageListener');
        EventBinder.init();
        return assert.isTrue(bindMessageEventStub.calledWith(messageListenerStub));
      });
      return describe('event behaviour', function() {
        return it('should call packageManager.installpackage on installPackage event', function() {
          var callback, flag, installPackageStub;
          callback = this.sandbox.spy();
          installPackageStub = this.sandbox.stub(PackageManager, 'installPackage', function(id, callback) {
            return callback();
          });
          flag = EventBinder.messageListener({
            action: 'installPackage',
            params: {
              packageId: 'asdf'
            }
          }, {}, callback);
          assert.isTrue(flag);
          assert.isTrue(installPackageStub.calledWith('asdf'));
          return assert.isTrue(callback.calledOnce);
        });
      });
    });
  });

}).call(this);
